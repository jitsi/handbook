"use strict";(self.webpackChunk_jitsi_handbook=self.webpackChunk_jitsi_handbook||[]).push([[9704],{2631:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var s=i(4848),r=i(8453);const t={id:"file-sharing",title:"File sharing"},o=void 0,l={id:"devops-guide/file-sharing",title:"File sharing",description:"Deploying and configuring a demo file sharing service for Jitsi Meet",source:"@site/docs/devops-guide/file-sharing.md",sourceDirName:"devops-guide",slug:"/devops-guide/file-sharing",permalink:"/handbook/docs/devops-guide/file-sharing",draft:!1,unlisted:!1,editUrl:"https://github.com/jitsi/handbook/edit/master/docs/devops-guide/file-sharing.md",tags:[],version:"current",lastUpdatedAt:1754337398e3,frontMatter:{id:"file-sharing",title:"File sharing"},sidebar:"docs",previous:{title:"Cloud API",permalink:"/handbook/docs/devops-guide/cloud-api"},next:{title:"Video Tutorials",permalink:"/handbook/docs/devops-guide/devops-guide-videotutorials"}},a={},d=[{value:"Deploying and configuring a demo file sharing service for Jitsi Meet",id:"deploying-and-configuring-a-demo-file-sharing-service-for-jitsi-meet",level:2},{value:"Setup",id:"setup",level:3},{value:"Usage",id:"usage",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"deploying-and-configuring-a-demo-file-sharing-service-for-jitsi-meet",children:"Deploying and configuring a demo file sharing service for Jitsi Meet"}),"\n",(0,s.jsxs)(n.p,{children:["The Jitsi Meet UI can use a file sharing service which implements the following ",(0,s.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet/blob/master/resources/file-sharing.yaml",children:"API"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["There is an example implementation of such a service in the ",(0,s.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet-file-sharing-service",children:"jitsi-meet-file-sharing"}),".\nThat is a simple implementation using local filesystem storage."]}),"\n",(0,s.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(n.p,{children:["On an existing deployment or after installing jitsi-meet following the ",(0,s.jsx)(n.a,{href:"https://jitsi.org/qi",children:"Self-Hosting Guide"})," you need to install the file sharing service and configure jitsi-meet to use it."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Download and install nvm"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | bash\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Clone the repository and deploy the service"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd /srv\ngit clone https://github.com/jitsi/jitsi-meet-file-sharing-service.git\ncd /srv/jitsi-meet-file-sharing-service\nnvm install\nnvm use\n./deploy.sh\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Setup sign material for short-lived tokens"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir /etc/jitsi/file-sharing-service\nmkdir -p /var/www/jitsi-meet-file-sharing-service/uploads\nopenssl genrsa -out /etc/jitsi/file-sharing-service/short_lived_token.key 2048\nopenssl rsa -in /etc/jitsi/file-sharing-service/short_lived_token.key -pubout -out /etc/jitsi/file-sharing-service/short_lived_token.pub\nssh-keygen -f /etc/jitsi/file-sharing-service/short_lived_token.key -e -m pem > /etc/jitsi/file-sharing-service/short_lived_token.pem\nchmod g+r /etc/jitsi/file-sharing-service/short_lived_token.key\nchown root:prosody /etc/jitsi/file-sharing-service/short_lived_token.key\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Enable short-lived token in your prosody config.\nAdd its configuration to ",(0,s.jsx)(n.code,{children:"/etc/prosody/conf.avail/your-domain.cfg.lua"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"short_lived_token = {\n    issuer = 'prosody';\n    accepted_audiences = { 'file-sharing' };\n    key_path = '/etc/jitsi/file-sharing-service/short_lived_token.key';\n    key_id = 'jitsi/short_lived_token_2025';\n    ttl_seconds = 30;\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Enable it in the ",(0,s.jsx)(n.code,{children:"modules_enabled"})," section under the main virtual host:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-lua",children:"modules_enabled = {\n    ...\n    'short_lived_token';\n    ...\n};\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"restart prosody:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"systemctl restart prosody\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Configure the file sharing service in config.js, add to the end:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'config.fileSharing = {\n    apiUrl :"https://your-domain/file-service/v1/documents",\n    enabled: true,\n};\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Configure nginx by adding the following to your nginx configuration file (e.g., ",(0,s.jsx)(n.code,{children:"/etc/nginx/sites-available/your-domain.conf"}),"):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-nginx",children:'    client_max_body_size 50M;\n    location ^~ /file-service/ {\n        # Remove /file-service prefix when forwarding\n        rewrite ^/file-service(/.*)$ $1 break;\n\n        # Add CORS headers\n        add_header Access-Control-Allow-Origin "$http_origin" always;\n        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;\n        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;\n        add_header Access-Control-Allow-Credentials "true" always;\n\n        # Handle preflight requests\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n\n        proxy_pass http://localhost:3000/;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \'upgrade\';\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_cache_bypass $http_upgrade;\n        proxy_connect_timeout 60s;\n        proxy_send_timeout 60s;\n        proxy_read_timeout 60s;\n    }\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"restart nginx"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"systemctl restart nginx\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Setup the environment variables for the file sharing service in ",(0,s.jsx)(n.code,{children:"/srv/jitsi-meet-file-sharing-service/.env"}),":"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"JWT_PUBLIC_KEY_PATH=/etc/jitsi/file-sharing-service/short_lived_token.pem\nUPLOAD_DIR=/var/www/jitsi-meet-file-sharing-service/uploads\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"restart the file sharing service:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd /srv/jitsi-meet-file-sharing-service\nnvm use\npm2 delete jitsi-meet-file-sharing-service\npm2 start ecosystem.config.js --env production\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If you are using jwt authentication, make sure you pass 'file-upload' feature in user.context.features."}),"\n",(0,s.jsx)(n.li,{children:"If you are using some other authentication method, you need to configure jitsi_default_permissions to include it."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"jitsi_default_permissions = {\n        livestreaming = true;\n        recording = true;\n        transcription = true;\n        ['outbound-call'] = true;\n        ['create-polls'] = true;\n        ['file-upload'] = true;\n        ['send-groupchat'] = true;\n        flip = true;\n    };\n"})}),"\n",(0,s.jsx)(n.p,{children:"If you change prosody configuration, make sure to restart it."}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["To rebuild the app: ",(0,s.jsx)(n.code,{children:"npm run build"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["To restart the service: ",(0,s.jsx)(n.code,{children:"pm2 restart file-sharing-service"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["To watch the logs: ",(0,s.jsx)(n.code,{children:"pm2 logs file-sharing-service"})]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);
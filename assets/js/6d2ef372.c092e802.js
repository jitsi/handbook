"use strict";(self.webpackChunk_jitsi_handbook=self.webpackChunk_jitsi_handbook||[]).push([[7344],{5220:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var i=t(4848),o=t(8453);const s={id:"dev-guide-ljm-api",title:"lib-jitsi-meet API (low level)"},c=void 0,r={id:"dev-guide/dev-guide-ljm-api",title:"lib-jitsi-meet API (low level)",description:"You can use Jitsi Meet API to create Jitsi Meet video conferences with a custom GUI.",source:"@site/docs/dev-guide/ljm-api.md",sourceDirName:"dev-guide",slug:"/dev-guide/dev-guide-ljm-api",permalink:"/handbook/docs/dev-guide/dev-guide-ljm-api",draft:!1,unlisted:!1,editUrl:"https://github.com/jitsi/handbook/edit/master/docs/dev-guide/ljm-api.md",tags:[],version:"current",lastUpdatedAt:1743427011e3,frontMatter:{id:"dev-guide-ljm-api",title:"lib-jitsi-meet API (low level)"},sidebar:"docs",previous:{title:"IFrame API",permalink:"/handbook/docs/dev-guide/dev-guide-iframe"},next:{title:"Electron SDK",permalink:"/handbook/docs/dev-guide/dev-guide-electron-sdk"}},a={},l=[{value:"Installation",id:"installation",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Components",id:"components",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"You can use Jitsi Meet API to create Jitsi Meet video conferences with a custom GUI."}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["To embed Jitsi Meet API in your application you need to source the Jitsi Meet API library.\n",(0,i.jsx)(n.strong,{children:"It should be sourced from your deployment."})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<script src="https://meet.jit.si/libs/lib-jitsi-meet.min.js"><\/script>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Now you can access Jitsi Meet API through the ",(0,i.jsx)(n.code,{children:"JitsiMeetJS"})," global object."]}),"\n",(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["The first thing you must do in order to use Jitsi Meet API is to initialize ",(0,i.jsx)(n.code,{children:"JitsiMeetJS"})," object:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"JitsiMeetJS.init();\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Then you must create the connection object:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"var connection = new JitsiMeetJS.JitsiConnection(null, null, options);\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Now we can attach some listeners to the connection object and establish the server connection:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"connection.addEventListener(JitsiMeetJS.events.connection.CONNECTION_ESTABLISHED, onConnectionSuccess);\nconnection.addEventListener(JitsiMeetJS.events.connection.CONNECTION_FAILED, onConnectionFailed);\nconnection.addEventListener(JitsiMeetJS.events.connection.CONNECTION_DISCONNECTED, disconnect);\n\nconnection.connect();\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:["After you receive the ",(0,i.jsx)(n.code,{children:"CONNECTION_ESTABLISHED"})," event you are to create the ",(0,i.jsx)(n.code,{children:"JitsiConference"})," object and\nalso you may want to attach listeners for conference events (we are going to add handlers for remote track, conference joined, etc. ):"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'room = connection.initJitsiConference("conference1", confOptions);\nroom.on(JitsiMeetJS.events.conference.TRACK_ADDED, onRemoteTrack);\nroom.on(JitsiMeetJS.events.conference.CONFERENCE_JOINED, onConferenceJoined);\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:"You also may want to get your local tracks from the camera and microphone:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"JitsiMeetJS.createLocalTracks().then(onLocalTracks);\n"})}),"\n",(0,i.jsx)(n.p,{children:"NOTE: Adding listeners and creating local streams are not mandatory steps."}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsx)(n.li,{children:"Then you are ready to create / join a conference :"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"room.join();\n"})}),"\n",(0,i.jsx)(n.p,{children:"After that step you are in the conference. Now you can continue with adding some code that will handle the events and manage the conference."}),"\n",(0,i.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://jitsi.github.io/lib-jitsi-meet/",children:"the full API docs"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.admonition,{title:"NOTE",type:"note",children:(0,i.jsxs)(n.p,{children:["JaaS customers, please follow ",(0,i.jsx)(n.a,{href:"https://github.com/jitsi/ljm-jaas-example",children:"this example"})," or check out the ",(0,i.jsx)(n.a,{href:"https://jitsi.github.io/ljm-jaas-example",children:"live demo"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunk_jitsi_handbook=self.webpackChunk_jitsi_handbook||[]).push([[6997],{3994:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=i(4848),t=i(8453);const r={id:"dev-guide-react-native-sdk",title:"React Native SDK"},d=void 0,a={id:"dev-guide/dev-guide-react-native-sdk",title:"React Native SDK",description:"The Jitsi React Native SDK provides the same user experience as the Jitsi Meet app,",source:"@site/docs/dev-guide/react-native-sdk.md",sourceDirName:"dev-guide",slug:"/dev-guide/dev-guide-react-native-sdk",permalink:"/handbook/docs/dev-guide/dev-guide-react-native-sdk",draft:!1,unlisted:!1,editUrl:"https://github.com/jitsi/handbook/edit/master/docs/dev-guide/react-native-sdk.md",tags:[],version:"current",lastUpdatedAt:1734341745e3,frontMatter:{id:"dev-guide-react-native-sdk",title:"React Native SDK"},sidebar:"docs",previous:{title:"iOS SDK",permalink:"/handbook/docs/dev-guide/dev-guide-ios-sdk"},next:{title:"Flutter SDK",permalink:"/handbook/docs/dev-guide/dev-guide-flutter-sdk"}},o={},c=[{value:"Sample application using the React Native SDK",id:"sample-application-using-the-react-native-sdk",level:2},{value:"Usage",id:"usage",level:2},{value:"Android",id:"android",level:3},{value:"Permissions",id:"permissions",level:4},{value:"Services",id:"services",level:4},{value:"API",id:"api",level:4},{value:"iOS",id:"ios",level:3},{value:"Permissions",id:"permissions-1",level:4},{value:"Build Phases",id:"build-phases",level:4},{value:"Run Script Phases",id:"run-script-phases",level:5},{value:"JitsiMeeting props",id:"jitsimeeting-props",level:2},{value:"config",id:"config",level:3},{value:"flags",id:"flags",level:3},{value:"eventListeners",id:"eventlisteners",level:3},{value:"room",id:"room",level:3},{value:"serverURL",id:"serverurl",level:3},{value:"style",id:"style",level:3},{value:"token",id:"token",level:3},{value:"userInfo",id:"userinfo",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The Jitsi React Native SDK provides the same user experience as the Jitsi Meet app,\nin a customizable way which you can embed in your React Native apps."}),"\n",(0,s.jsx)(n.h2,{id:"sample-application-using-the-react-native-sdk",children:"Sample application using the React Native SDK"}),"\n",(0,s.jsxs)(n.p,{children:["If you want to see how easy integrating the Jitsi React Native SDK into a React Native application is, take a look at the",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet-sdk-samples#react-native",children:"sample applications repository"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["While this is a published library, you can ",(0,s.jsx)(n.code,{children:"npm i @jitsi/react-native-sdk"}),".",(0,s.jsx)("br",{}),"\nDependency conflicts may occur between RNSDK and your app. ",(0,s.jsx)("br",{}),"If that is the case, please run ",(0,s.jsx)(n.code,{children:"npm i @jitsi/react-native-sdk --force"}),".",(0,s.jsx)("br",{}),"\nTo check if some dependencies need to be added, please run the following script ",(0,s.jsx)(n.code,{children:"node node_modules/@jitsi/react-native-sdk/update_dependencies.js"}),".",(0,s.jsx)("br",{}),"\nThis will sync all of our peer dependencies with your dependencies. ",(0,s.jsx)("br",{}),"\nNext you will need to do ",(0,s.jsx)(n.code,{children:"npm install"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Because our SDK uses SVG files, you will need to update your metro bundler configuration accordingly:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-config",metastring:'title="metro.config"',children:"const { getDefaultConfig } = require('metro-config');\n\nmodule.exports = (async () => {\n  const {\n    resolver: {\n      sourceExts,\n      assetExts\n    }\n  } = await getDefaultConfig();\n\n  return {\n    transformer: {\n      babelTransformerPath: require.resolve('react-native-svg-transformer'),\n      getTransformOptions: async () => ({\n        transform: {\n          experimentalImportSupport: false,\n          inlineRequires: true,\n        },\n      }),\n    },\n    resolver: {\n      assetExts: assetExts.filter(ext => ext !== 'svg'),\n      sourceExts: [...sourceExts, 'svg']\n    }\n  }\n})();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"android",children:"Android"}),"\n",(0,s.jsx)(n.h4,{id:"permissions",children:"Permissions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In ",(0,s.jsx)(n.code,{children:"android/app/src/debug/AndroidManifest.xml"})," and ",(0,s.jsx)(n.code,{children:"android/app/src/main/AndroidManifest.xml"}),", under the ",(0,s.jsx)(n.code,{children:"</application>"})," tag, please include","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:' <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />\n <uses-permission android:name="android.permission.BLUETOOTH" />\n <uses-permission android:name="android.permission.CAMERA" />\n <uses-permission android:name="android.permission.INTERNET" />\n <uses-permission android:name="android.permission.MANAGE_OWN_CALLS" />\n <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />\n <uses-permission android:name="android.permission.RECORD_AUDIO" />\n <uses-permission android:name="android.permission.WAKE_LOCK" />\n <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Starting Android 14, specific foreground service types permissions require to be added in the manifest file:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:' <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />\n <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK" />\n <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PROJECTION" />\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"services",children:"Services"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["To enables the screen share feature you now need to go to your ",(0,s.jsx)(n.code,{children:"MainApplication.java"})," file and:","\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"import com.oney.WebRTCModule.WebRTCModuleOptions;"})," that comes from ",(0,s.jsx)(n.code,{children:"react-native-webrtc"})," dependency."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"WebRTCModuleOptions options = WebRTCModuleOptions.getInstance();"})," instance it."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"options.enableMediaProjectionService = true;"})," enable foreground service that takes care of screen-sharing feature."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"api",children:"API"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Our app use ",(0,s.jsx)(n.code,{children:"react-native-orientation-locker"})," dependency that uses API 33 features. Make sure that your app, in ",(0,s.jsx)(n.code,{children:"android\\build.gradle"}),", targets, at least, that version:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"  buildscript {\n      ext {\n          compileSdkVersion = 33\n          targetSdkVersion = 33\n      }\n  }\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ios",children:"iOS"}),"\n",(0,s.jsx)(n.h4,{id:"permissions-1",children:"Permissions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["React Native SDK requests camera and microphone access, make sure to include the required entries for ",(0,s.jsx)(n.code,{children:"NSCameraUsageDescription"})," and ",(0,s.jsx)(n.code,{children:"NSMicrophoneUsageDescription"}),"in your ",(0,s.jsx)(n.code,{children:"Info.plist"})," file."]}),"\n",(0,s.jsxs)(n.li,{children:["React Native SDK shows and hides the status bar based on the conference state,\nyou may want to set ",(0,s.jsx)(n.code,{children:"UIViewControllerBasedStatusBarAppearance"})," to ",(0,s.jsx)(n.code,{children:"NO"})," in your\n",(0,s.jsx)(n.code,{children:"Info.plist"})," file."]}),"\n",(0,s.jsxs)(n.li,{children:["For starting screen sharing React Native SDK provides the UI to present the ",(0,s.jsx)(n.code,{children:"RPSystemBroadcastPickerView"})," to the user. By default, the picker will display a list of all the available broadcast providers. In order to limit the picker to our particular broadcast provider, we have to set ",(0,s.jsx)(n.code,{children:"preferredExtension"})," to the bundle identifier of the broadcast extension. We are doing this by adding a new key named ",(0,s.jsx)(n.code,{children:"RTCScreenSharingExtension"})," to the app's Info.plist and setting the broadcast extension bundle identifier as the value."]}),"\n",(0,s.jsxs)(n.li,{children:["Make sure ",(0,s.jsx)(n.code,{children:"voip"})," is added to ",(0,s.jsx)(n.code,{children:"UIBackgroundModes"}),", in the app's ",(0,s.jsx)(n.code,{children:"Info.plist"}),", in order to work when the app is in the background."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"build-phases",children:"Build Phases"}),"\n",(0,s.jsx)(n.h5,{id:"run-script-phases",children:"Run Script Phases"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"For the sounds to work, please add the following script in Xcode:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'  SOUNDS_DIR="${PROJECT_DIR}/../node_modules/@jitsi/react-native-sdk/sounds"\n  cp $SOUNDS_DIR/* ${CONFIGURATION_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"jitsimeeting-props",children:"JitsiMeeting props"}),"\n",(0,s.jsx)(n.p,{children:"Our JitsiMeeting component renders the full meeting experience. This has some customizable properties:"}),"\n",(0,s.jsx)(n.h3,{id:"config",children:"config"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Object"})," - Overwrite different ",(0,s.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet/blob/master/config.js",children:"config"})," options."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"For example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'<JitsiMeeting\n    config = {{\n        hideConferenceTimer: true,\n        subject: "React Native SDK",\n        customToolbarButtons: [\n            {\n                icon: "https://w7.pngwing.com/pngs/987/537/png-transparent-download-downloading-save-basic-user-interface-icon-thumbnail.png",\n                id: "btn1",\n                text: "Button one"\n            }, {\n                icon: "https://w7.pngwing.com/pngs/987/537/png-transparent-download-downloading-save-basic-user-interface-icon-thumbnail.png",\n                id: "btn2",\n                text: "Button two"\n            }\n        ]\n    }} />\n'})}),"\n",(0,s.jsx)(n.h3,{id:"flags",children:"flags"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Object"})," - Add different feature ",(0,s.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet/blob/master/react/features/base/flags/constants.ts",children:"flags"}),"\nthat your meeting experience would like to have."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"For example:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"<JitsiMeeting \n    flags={{\n    'call-integration.enabled': true, \n    'fullscreen.enabled': false, \n    'invite.enabled': true }} />\n"})}),"\n",(0,s.jsx)(n.h3,{id:"eventlisteners",children:"eventListeners"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Object"})," - Options that personalize your meeting experience:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onConferenceBlurred\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"CONFERENCE_BLURRED"})," action is dispatched, more exactly when a conference screen is out of focus, more exactly when navigation to another screen is initiated."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onConferenceFocused\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"CONFERENCE_FOCUSED"})," action is dispatched, more exactly when a conference screen is focused."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onAudioMutedChanged\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"SET_AUDIO_MUTED"})," action is dispatched, more exactly when audio mute state is changed."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onConferenceJoined\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"CONFERENCE_JOINED"})," action is dispatched, more exactly when a conference was joined."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onConferenceLeft\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"CONFERENCE_LEFT"})," action is dispatched, more exactly when a conference was left."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onConferenceWillJoin\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"CONFERENCE_WILL_JOIN"})," action is dispatched, more exactly when a conference will be joined."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onEnterPictureInPicture\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"ENTER_PICTURE_IN_PICTURE"})," action is dispatched, more exactly when entering picture-in-picture is initiated."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onParticipantJoined\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"PARTICIPANT_JOINED"})," action is dispatched, more exactly when a specific participant joined a conference."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onReadyToClose\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"READY_TO_CLOSE"})," action is dispatched, more exactly when one exits a conference."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["onVideoMutedChanged\n",(0,s.jsx)(n.code,{children:"Function"})," - Takes a function that gets triggered when ",(0,s.jsx)(n.code,{children:"SET_VIDEO_MUTED"})," action is dispatched, more exactly when video mute state is changed."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"room",children:"room"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"})," - Name of the room where the conference takes place."]}),"\n",(0,s.jsx)(n.h3,{id:"serverurl",children:"serverURL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"})," - Server where the conference should take place."]}),"\n",(0,s.jsx)(n.h3,{id:"style",children:"style"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Object"})," - CSS your meeting experience."]}),"\n",(0,s.jsx)(n.h3,{id:"token",children:"token"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"string"})," - JWT token used for authentication."]}),"\n",(0,s.jsx)(n.h3,{id:"userinfo",children:"userInfo"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["avatarUrl\n",(0,s.jsx)(n.code,{children:"string"})," - Path to participant's avatar."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["displayName\n",(0,s.jsx)(n.code,{children:"string"})," - Default participant name to be displayed."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["email\n",(0,s.jsx)(n.code,{children:"string"})," - Default email for participant."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunk_jitsi_handbook=self.webpackChunk_jitsi_handbook||[]).push([[9368],{6350:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var t=i(4848),s=i(8453);const o={id:"dev-guide-android-sdk",title:"Android SDK"},d=void 0,r={id:"dev-guide/dev-guide-android-sdk",title:"Android SDK",description:"The Jitsi Meet Android SDK provides the same user experience as the Jitsi Meet app,",source:"@site/docs/dev-guide/android-sdk.md",sourceDirName:"dev-guide",slug:"/dev-guide/dev-guide-android-sdk",permalink:"/handbook/docs/dev-guide/dev-guide-android-sdk",draft:!1,unlisted:!1,editUrl:"https://github.com/jitsi/handbook/edit/master/docs/dev-guide/android-sdk.md",tags:[],version:"current",lastUpdatedAt:1733744448e3,frontMatter:{id:"dev-guide-android-sdk",title:"Android SDK"},sidebar:"docs",previous:{title:"React SDK",permalink:"/handbook/docs/dev-guide/dev-guide-react-sdk"},next:{title:"iOS SDK",permalink:"/handbook/docs/dev-guide/dev-guide-ios-sdk"}},a={},l=[{value:"Sample applications using the SDK",id:"sample-applications-using-the-sdk",level:2},{value:"Build your own, or use a pre-build SDK artifacts/binaries",id:"build-your-own-or-use-a-pre-build-sdk-artifactsbinaries",level:2},{value:"Use pre-build SDK artifacts/binaries",id:"use-pre-build-sdk-artifactsbinaries",level:3},{value:"Build and use your own SDK artifacts/binaries",id:"build-and-use-your-own-sdk-artifactsbinaries",level:3},{value:"Using the API",id:"using-the-api",level:2},{value:"JitsiMeetActivity",id:"jitsimeetactivity",level:3},{value:"JitsiMeetView",id:"jitsimeetview",level:3},{value:"join(options)",id:"joinoptions",level:4},{value:"dispose()",id:"dispose",level:4},{value:"JitsiMeetConferenceOptions",id:"jitsimeetconferenceoptions",level:3},{value:"JitsiMeetActivityDelegate",id:"jitsimeetactivitydelegate",level:3},{value:"onActivityResult(...)",id:"onactivityresult",level:4},{value:"onBackPressed()",id:"onbackpressed",level:4},{value:"onHostDestroy(...)",id:"onhostdestroy",level:4},{value:"onHostResume(...)",id:"onhostresume",level:4},{value:"onHostStop(...)",id:"onhoststop",level:4},{value:"onNewIntent(...)",id:"onnewintent",level:4},{value:"onRequestPermissionsResult(...)",id:"onrequestpermissionsresult",level:4},{value:"onUserLeaveHint()",id:"onuserleavehint",level:4},{value:"Listening for broadcasted events",id:"listening-for-broadcasted-events",level:3},{value:"Supported events",id:"supported-events",level:4},{value:"CONFERENCE_JOINED",id:"conference_joined",level:5},{value:"CONFERENCE_TERMINATED",id:"conference_terminated",level:5},{value:"CONFERENCE_WILL_JOIN",id:"conference_will_join",level:5},{value:"AUDIO_MUTED_CHANGED",id:"audio_muted_changed",level:5},{value:"PARTICIPANT_JOINED",id:"participant_joined",level:5},{value:"PARTICIPANT_LEFT",id:"participant_left",level:5},{value:"ENDPOINT_TEXT_MESSAGE_RECEIVED",id:"endpoint_text_message_received",level:5},{value:"SCREEN_SHARE_TOGGLED",id:"screen_share_toggled",level:4},{value:"PARTICIPANTS_INFO_RETRIEVED",id:"participants_info_retrieved",level:5},{value:"CHAT_MESSAGE_RECEIVED",id:"chat_message_received",level:5},{value:"CHAT_TOGGLED",id:"chat_toggled",level:5},{value:"VIDEO_MUTED_CHANGED",id:"video_muted_changed",level:5},{value:"READY_TO_CLOSE",id:"ready_to_close",level:5},{value:"CUSTOM_OVERFLOW_MENU_BUTTON_PRESSED",id:"custom_overflow_menu_button_pressed",level:5},{value:"Broadcasting Actions",id:"broadcasting-actions",level:3},{value:"Supported actions",id:"supported-actions",level:4},{value:"SET_AUDIO_MUTED",id:"set_audio_muted",level:5},{value:"SET_VIDEO_MUTED",id:"set_video_muted",level:5},{value:"HANG_UP",id:"hang_up",level:5},{value:"SEND_ENDPOINT_TEXT_MESSAGE",id:"send_endpoint_text_message",level:5},{value:"TOGGLE_SCREEN_SHARE",id:"toggle_screen_share",level:5},{value:"RETRIEVE_PARTICIPANTS_INFO",id:"retrieve_participants_info",level:5},{value:"OPEN_CHAT",id:"open_chat",level:5},{value:"CLOSE_CHAT",id:"close_chat",level:5},{value:"SEND_CHAT_MESSAGE",id:"send_chat_message",level:5},{value:"ProGuard rules",id:"proguard-rules",level:2},{value:"Picture-in-Picture",id:"picture-in-picture",level:2},{value:"Dropbox integration",id:"dropbox-integration",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The Jitsi Meet Android SDK provides the same user experience as the Jitsi Meet app,\nin a customizable way which you can embed in your apps."}),"\n",(0,t.jsx)(n.admonition,{type:"important",children:(0,t.jsx)(n.p,{children:"Android 7.0 (API level 24) or higher is required."})}),"\n",(0,t.jsx)(n.h2,{id:"sample-applications-using-the-sdk",children:"Sample applications using the SDK"}),"\n",(0,t.jsxs)(n.p,{children:["If you want to see how easy integrating the Jitsi Meet SDK into a native application is, take a look at the\n",(0,t.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet-sdk-samples#android",children:"sample applications repository"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"build-your-own-or-use-a-pre-build-sdk-artifactsbinaries",children:"Build your own, or use a pre-build SDK artifacts/binaries"}),"\n",(0,t.jsx)(n.p,{children:"Jitsi conveniently provides a pre-build SDK artifacts/binaries in its Maven repository. When you do not require any\nmodification to the SDK itself or any of its dependencies, it's suggested to use the pre-build SDK. This avoids the\ncomplexity of building and installing your own SDK artifacts/binaries."}),"\n",(0,t.jsx)(n.h3,{id:"use-pre-build-sdk-artifactsbinaries",children:"Use pre-build SDK artifacts/binaries"}),"\n",(0,t.jsxs)(n.p,{children:["In your project, add the Maven repository\n",(0,t.jsx)(n.code,{children:"https://github.com/jitsi/jitsi-maven-repository/raw/master/releases"})," and the\ndependency ",(0,t.jsx)(n.code,{children:"org.jitsi.react:jitsi-meet-sdk"})," into your ",(0,t.jsx)(n.code,{children:"build.gradle"})," files."]}),"\n",(0,t.jsxs)(n.p,{children:["The repository typically goes into the ",(0,t.jsx)(n.code,{children:"build.gradle"})," file in the root of your project:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gradle",metastring:'title="build.gradle"',children:"allprojects {\n    repositories {\n        maven {\n            url \"https://github.com/jitsi/jitsi-maven-repository/raw/master/releases\"\n        }\n        google()\n        mavenCentral()\n        maven { url 'https://www.jitpack.io' }\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["In recent versions of Android Studios, ",(0,t.jsx)(n.code,{children:"allprojects{}"})," might not be found in ",(0,t.jsx)(n.code,{children:"build.gradle"}),". In that case, the repository goes into the ",(0,t.jsx)(n.code,{children:"settings.gradle"})," file in the root of your project:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gradle",metastring:'title="settings.gradle"',children:'dependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        maven {\n            url "https://github.com/jitsi/jitsi-maven-repository/raw/master/releases"\n        }\n        maven {\n            url "https://maven.google.com"\n        }\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Dependency definitions belong in the individual module ",(0,t.jsx)(n.code,{children:"build.gradle"})," files:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gradle",children:"dependencies {\n    // (other dependencies)\n    implementation ('org.jitsi.react:jitsi-meet-sdk:+') { transitive = true }\n}\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Make sure you pin your dependency by checking the ",(0,t.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet-release-notes/blob/master/CHANGELOG-MOBILE-SDKS.md",children:"releases page"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"build-and-use-your-own-sdk-artifactsbinaries",children:"Build and use your own SDK artifacts/binaries"}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Show building instructions"}),(0,t.jsxs)(n.p,{children:["Start by making sure that your development environment ",(0,t.jsx)(n.a,{href:"/docs/category/mobile",children:"is set up correctly"}),"."]}),(0,t.jsx)(n.admonition,{title:"A Note on Dependencies",type:"note",children:(0,t.jsxs)(n.p,{children:["Apart from the SDK, Jitsi also publishes a binary Maven artifact for some of the SDK dependencies (that are not otherwise publicly available) to the Jitsi Maven repository. When you're planning to use a SDK that is built from source, you'll likely use a version of the source code that is newer (or at least ",(0,t.jsx)(n.em,{children:"different"}),") than the version of the source that was used to create the binary SDK artifact. As a consequence, the dependencies that your project will need, might also be different from those that are published in the Jitsi Maven repository. This might lead to build problems, caused by dependencies that are unavailable."]})}),(0,t.jsxs)(n.p,{children:["If you want to use a SDK that is built from source, you will likely benefit from composing a local Maven repository that contains these dependencies. The text below describes how you create a repository that includes both the SDK as well as these dependencies. For illustration purposes, we'll define the location of this local Maven repository as ",(0,t.jsx)(n.code,{children:"/tmp/repo"})]}),(0,t.jsxs)(n.p,{children:["In source code form, the Android SDK dependencies are locked/pinned by ",(0,t.jsx)(n.code,{children:"package.json"})," and ",(0,t.jsx)(n.code,{children:"package-lock.json"})," of the Jitsi Meet project. To obtain the data, execute NPM in the jitsi-meet project directory:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"    npm install\n"})}),(0,t.jsx)(n.p,{children:"This will pull in the dependencies in either binary format, or in source code format, somewhere under /node_modules/"}),(0,t.jsxs)(n.p,{children:["Third-party React Native ",(0,t.jsx)(n.em,{children:"modules"}),", which Jitsi Meet SDK for Android depends on, are download by NPM in source code\nor binary form. These need to be assembled into Maven artifacts, and then published to your local Maven repository.\nA script is provided to facilitate this. From the root of the jitsi-meet project repository, run:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"    ./android/scripts/release-sdk.sh /tmp/repo\n"})}),(0,t.jsxs)(n.p,{children:["This will build and publish the SDK, and all of its dependencies to the specified Maven repository (",(0,t.jsx)(n.code,{children:"/tmp/repo"}),") in\nthis example."]}),(0,t.jsxs)(n.p,{children:["You're now ready to use the artifacts. In ",(0,t.jsx)(n.em,{children:"your"})," project, add the Maven repository that you used above (",(0,t.jsx)(n.code,{children:"/tmp/repo"}),") into your top-level ",(0,t.jsx)(n.code,{children:"build.gradle"})," file:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gradle",children:"    allprojects {\n        repositories {\n            maven { url \"file:/tmp/repo\" }\n            google()\n            mavenCentral()\n            maven { url 'https://www.jitpack.io' }\n        }\n    }\n"})}),(0,t.jsxs)(n.p,{children:["You can use your local repository to replace the Jitsi repository (",(0,t.jsx)(n.code,{children:'maven { url "https://github.com/jitsi/jitsi-maven-repository/raw/master/releases" }'}),") when you published ",(0,t.jsx)(n.em,{children:"all"})," subprojects. If you didn't do that, you'll have to add both repositories. Make sure your local repository is listed first!"]}),(0,t.jsxs)(n.p,{children:["Then, define the dependency ",(0,t.jsx)(n.code,{children:"org.jitsi.react:jitsi-meet-sdk"})," into the ",(0,t.jsx)(n.code,{children:"build.gradle"})," file of your module:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"    implementation ('org.jitsi.react:jitsi-meet-sdk:+') { transitive = true }\n"})}),(0,t.jsxs)(n.p,{children:["Note that there should not be a need to explicitly add the other dependencies, as they will be pulled in as transitive\ndependencies of ",(0,t.jsx)(n.code,{children:"jitsi-meet-sdk"}),"."]})]}),"\n",(0,t.jsx)(n.h2,{id:"using-the-api",children:"Using the API"}),"\n",(0,t.jsx)(n.p,{children:"Jitsi Meet SDK is an Android library which embodies the whole Jitsi Meet\nexperience and makes it reusable by third-party apps."}),"\n",(0,t.jsxs)(n.p,{children:["First, add Java 1.8 compatibility support to your project by adding the\nfollowing lines into your ",(0,t.jsx)(n.code,{children:"build.gradle"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-gradle",children:"compileOptions {\n    sourceCompatibility JavaVersion.VERSION_1_8\n    targetCompatibility JavaVersion.VERSION_1_8\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["To get started, just launch ",(0,t.jsx)(n.code,{children:"JitsiMeetActivity"})," pointing to the room you want:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// Somewhere early in your app.\nJitsiMeetConferenceOptions defaultOptions\n        = new JitsiMeetConferenceOptions.Builder()\n    .setServerURL(serverURL)\n    // When using JaaS, set the obtained JWT here\n    //.setToken("MyJWT")\n    // Different features flags can be set\n    // .setFeatureFlag("toolbox.enabled", false)\n    // .setFeatureFlag("filmstrip.enabled", false)\n    .setFeatureFlag("welcomepage.enabled", false)\n    .build();\nJitsiMeet.setDefaultConferenceOptions(defaultOptions);\n// ...\n// Build options object for joining the conference. The SDK will merge the default\n// one we set earlier and this one when joining.\nJitsiMeetConferenceOptions options\n        = new JitsiMeetConferenceOptions.Builder()\n    .setRoom(roomName)\n    // Settings for audio and video\n    //.setAudioMuted(true)\n    //.setVideoMuted(true)\n    .build();\n// Launch the new activity with the given options. The launch() method takes care\n// of creating the required Intent and passing the options.\nJitsiMeetActivity.launch(this, options);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Alternatively, you can use the ",(0,t.jsx)(n.code,{children:"org.jitsi.meet.sdk.JitsiMeetView"})," class which\nextends ",(0,t.jsx)(n.code,{children:"android.view.View"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that this should only be needed when ",(0,t.jsx)(n.code,{children:"JitsiMeetActivity"})," cannot be used for\nsome reason. Extending ",(0,t.jsx)(n.code,{children:"JitsiMeetView"})," requires manual wiring of the view to\nthe activity, using a lot of boilerplate code. Using the Activity instead of the\nView is strongly recommended."]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"Show example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'package org.jitsi.example;\n\nimport android.os.Bundle;\nimport android.support.v4.app.FragmentActivity;\n\nimport org.jitsi.meet.sdk.JitsiMeetView;\nimport org.jitsi.meet.sdk.ReactActivityLifecycleCallbacks;\n\n// Example\n//\npublic class MainActivity extends FragmentActivity implements JitsiMeetActivityInterface {\n    private JitsiMeetView view;\n\n    @Override\n    protected void onActivityResult(\n            int requestCode,\n            int resultCode,\n            Intent data) {\n        JitsiMeetActivityDelegate.onActivityResult(\n                this, requestCode, resultCode, data);\n    }\n\n    @Override\n    public void onBackPressed() {\n        JitsiMeetActivityDelegate.onBackPressed();\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        view = new JitsiMeetView(this);\n        JitsiMeetConferenceOptions options = new JitsiMeetConferenceOptions.Builder()\n            .setRoom("https://meet.jit.si/test123")\n            .build();\n        view.join(options);\n\n        setContentView(view);\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n\n        view.dispose();\n        view = null;\n\n        JitsiMeetActivityDelegate.onHostDestroy(this);\n    }\n\n    @Override\n    public void onNewIntent(Intent intent) {\n        JitsiMeetActivityDelegate.onNewIntent(intent);\n    }\n\n    @Override\n    public void onRequestPermissionsResult(\n            final int requestCode,\n            final String[] permissions,\n            final int[] grantResults) {\n        JitsiMeetActivityDelegate.onRequestPermissionsResult(requestCode, permissions, grantResults);\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n\n        JitsiMeetActivityDelegate.onHostResume(this);\n    }\n\n    @Override\n    protected void onStop() {\n        super.onStop();\n\n        JitsiMeetActivityDelegate.onHostPause(this);\n    }\n}\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"jitsimeetactivity",children:"JitsiMeetActivity"}),"\n",(0,t.jsxs)(n.p,{children:["This class encapsulates a high level API in the form of an Android ",(0,t.jsx)(n.code,{children:"FragmentActivity"}),"\nwhich displays a single ",(0,t.jsx)(n.code,{children:"JitsiMeetView"}),". You can pass a URL as a ",(0,t.jsx)(n.code,{children:"ACTION_VIEW"}),"\non the Intent when starting it and it will join the conference, and will be\nautomatically terminated (finish() will be called on the activity) when the\nconference ends or fails."]}),"\n",(0,t.jsx)(n.h3,{id:"jitsimeetview",children:"JitsiMeetView"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"JitsiMeetView"})," class is the core of Jitsi Meet SDK. It's designed to\ndisplay a Jitsi Meet conference (or a welcome page)."]}),"\n",(0,t.jsx)(n.h4,{id:"joinoptions",children:"join(options)"}),"\n",(0,t.jsxs)(n.p,{children:["Joins the conference specified by the given ",(0,t.jsx)(n.code,{children:"JitsiMeetConferenceOptions"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"dispose",children:"dispose()"}),"\n",(0,t.jsxs)(n.p,{children:["Releases all resources associated with this view. This method MUST be called\nwhen the Activity holding this view is going to be destroyed, usually in the\n",(0,t.jsx)(n.code,{children:"onDestroy()"})," method."]}),"\n",(0,t.jsx)(n.h3,{id:"jitsimeetconferenceoptions",children:"JitsiMeetConferenceOptions"}),"\n",(0,t.jsx)(n.p,{children:"This object encapsulates all the options that can be tweaked when joining\na conference."}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'ArrayList<Bundle> customToolbarButtons = new ArrayList<Bundle>();\n\nBundle firstCustomButton = new Bundle();\nBundle secondCustomButton = new Bundle();\n\nfirstCustomButton.putString("text", "Button one");\nfirstCustomButton.putString("icon", "https://w7.pngwing.com/pngs/987/537/png-transparent-download-downloading-save-basic-user-interface-icon-thumbnail.png");\nfirstCustomButton.putString("id", "btn1");\n\nsecondCustomButton.putString("text", "Button two");\nsecondCustomButton.putString("icon", "https://w7.pngwing.com/pngs/987/537/png-transparent-download-downloading-save-basic-user-interface-icon-thumbnail.png");\nsecondCustomButton.putString("id", "btn2");\n\ncustomToolbarButtons.add(firstCustomButton);\ncustomToolbarButtons.add(secondCustomButton);\n        \nJitsiMeetConferenceOptions options = new JitsiMeetConferenceOptions.Builder()\n    .setServerURL(new URL("https://meet.jit.si"))\n    .setRoom("MonthlyEndorsementsRebuildConsequently")\n    .setAudioMuted(false)\n    .setVideoMuted(false)\n    .setAudioOnly(false)\n    .setWelcomePageEnabled(false)\n    .setConfigOverride("requireDisplayName", true)\n    .setConfigOverride("customToolbarButtons", customToolbarButtons)\n    .build();\n'})}),"\n",(0,t.jsxs)(n.p,{children:["See the ",(0,t.jsx)(n.code,{children:"JitsiMeetConferenceOptions"})," implementation for all available options."]}),"\n",(0,t.jsx)(n.h3,{id:"jitsimeetactivitydelegate",children:"JitsiMeetActivityDelegate"}),"\n",(0,t.jsxs)(n.p,{children:["This class handles the interaction between ",(0,t.jsx)(n.code,{children:"JitsiMeetView"})," and its enclosing\n",(0,t.jsx)(n.code,{children:"Activity"}),". Generally this shouldn't be consumed by users, because they'd be\nusing ",(0,t.jsx)(n.code,{children:"JitsiMeetActivity"})," instead, which is already completely integrated."]}),"\n",(0,t.jsx)(n.p,{children:"All its methods are static."}),"\n",(0,t.jsx)(n.h4,{id:"onactivityresult",children:"onActivityResult(...)"}),"\n",(0,t.jsx)(n.p,{children:"Helper method to handle results of auxiliary activities launched by the SDK.\nShould be called from the activity method of the same name."}),"\n",(0,t.jsx)(n.h4,{id:"onbackpressed",children:"onBackPressed()"}),"\n",(0,t.jsxs)(n.p,{children:["Helper method which should be called from the activity's ",(0,t.jsx)(n.code,{children:"onBackPressed"})," method.\nIf this function returns ",(0,t.jsx)(n.code,{children:"true"}),", it means the action was handled and thus no\nextra processing is required; otherwise the app should call the parent's\n",(0,t.jsx)(n.code,{children:"onBackPressed"})," method."]}),"\n",(0,t.jsx)(n.h4,{id:"onhostdestroy",children:"onHostDestroy(...)"}),"\n",(0,t.jsxs)(n.p,{children:["Helper method which should be called from the activity's ",(0,t.jsx)(n.code,{children:"onDestroy"})," method."]}),"\n",(0,t.jsx)(n.h4,{id:"onhostresume",children:"onHostResume(...)"}),"\n",(0,t.jsxs)(n.p,{children:["Helper method which should be called from the activity's ",(0,t.jsx)(n.code,{children:"onResume"})," or ",(0,t.jsx)(n.code,{children:"onStop"}),"\nmethod."]}),"\n",(0,t.jsx)(n.h4,{id:"onhoststop",children:"onHostStop(...)"}),"\n",(0,t.jsxs)(n.p,{children:["Helper method which should be called from the activity's ",(0,t.jsx)(n.code,{children:"onSstop"})," method."]}),"\n",(0,t.jsx)(n.h4,{id:"onnewintent",children:"onNewIntent(...)"}),"\n",(0,t.jsxs)(n.p,{children:["Helper method for integrating the ",(0,t.jsx)(n.em,{children:"deep linking"})," functionality. If your app's\nactivity is launched in \"singleTask\" mode this method should be called from the\nactivity's ",(0,t.jsx)(n.code,{children:"onNewIntent"})," method."]}),"\n",(0,t.jsx)(n.h4,{id:"onrequestpermissionsresult",children:"onRequestPermissionsResult(...)"}),"\n",(0,t.jsx)(n.p,{children:"Helper method to handle permission requests inside the SDK. It should be called\nfrom the activity method of the same name."}),"\n",(0,t.jsx)(n.h4,{id:"onuserleavehint",children:"onUserLeaveHint()"}),"\n",(0,t.jsxs)(n.p,{children:["Helper method for integrating automatic Picture-in-Picture. It should be called\nfrom the activity's ",(0,t.jsx)(n.code,{children:"onUserLeaveHint"})," method."]}),"\n",(0,t.jsx)(n.p,{children:"This is a static method."}),"\n",(0,t.jsx)(n.h3,{id:"listening-for-broadcasted-events",children:"Listening for broadcasted events"}),"\n",(0,t.jsx)(n.p,{children:"The SDK broadcasts several events that the users can listen for."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"    IntentFilter intentFilter = new IntentFilter();\n    intentFilter.addAction(BroadcastEvent.Type.CONFERENCE_JOINED.getAction());\n    LocalBroadcastManager.getInstance(this).registerReceiver(broadcastReceiver, intentFilter);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Please see ",(0,t.jsx)(n.code,{children:"JitsiMeetActivity"}),", which registers for all the events and can serve as an example."]}),"\n",(0,t.jsx)(n.h4,{id:"supported-events",children:"Supported events"}),"\n",(0,t.jsx)(n.h5,{id:"conference_joined",children:"CONFERENCE_JOINED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when a conference was joined. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"url"}),": the conference URL"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"conference_terminated",children:"CONFERENCE_TERMINATED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when the active conference ends, be it because of user choice or because of a failure. ",(0,t.jsx)(n.code,{children:"data"})," contains the\nfollowing information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"url"}),": the conference URL"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"error"}),": missing if the conference finished gracefully, otherwise contains the error message"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"conference_will_join",children:"CONFERENCE_WILL_JOIN"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted before a conference is joined. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"url"}),": the conference URL"]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"audio_muted_changed",children:"AUDIO_MUTED_CHANGED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when the local participant's audio is muted or unmuted. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"muted"}),": a boolean indicating whether the audio is muted or not."]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"participant_joined",children:"PARTICIPANT_JOINED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when a participant has joined the conference. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"email"}),": the email of the participant. It may not be set if the remote participant didn't set one."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": the name of the participant."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"role"}),": the role of the participant."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"participantId"}),": the id of the participant."]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"participant_left",children:"PARTICIPANT_LEFT"}),"\n",(0,t.jsxs)(n.p,{children:["Called when a participant has left the conference. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"participantId"}),": the id of the participant that left."]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"endpoint_text_message_received",children:"ENDPOINT_TEXT_MESSAGE_RECEIVED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when an endpoint text message is received. The ",(0,t.jsx)(n.code,{children:"data"})," HashMap contains a ",(0,t.jsx)(n.code,{children:"senderId"})," key with the\nparticipantId of the sender and a ",(0,t.jsx)(n.code,{children:"message"})," key with the content."]}),"\n",(0,t.jsx)(n.h4,{id:"screen_share_toggled",children:"SCREEN_SHARE_TOGGLED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when a participant starts or stops sharing his screen. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"participantId"}),": Id of the participant that started or stopped sharing his screen."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sharing"}),": True if the participant is sharing his screen, false otherwise."]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"participants_info_retrieved",children:"PARTICIPANTS_INFO_RETRIEVED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when a RETRIEVE_PARTICIPANTS_INFO action is called. The ",(0,t.jsx)(n.code,{children:"data"})," HashMap contains a ",(0,t.jsx)(n.code,{children:"participantsInfo"})," key\nwith a list of participants information and a ",(0,t.jsx)(n.code,{children:"requestId"})," key with the ID that was sent in the\nRETRIEVE_PARTICIPANTS_INFO action."]}),"\n",(0,t.jsx)(n.h5,{id:"chat_message_received",children:"CHAT_MESSAGE_RECEIVED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when a chat text message is received. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"senderId"}),": the id of the participant that sent the message."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"message"}),": the content of the message."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isPrivate"}),": true if the message is private, false otherwise."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timestamp"}),": the (optional) timestamp of the message."]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"chat_toggled",children:"CHAT_TOGGLED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when the chat dialog is opened or closed. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isOpen"}),": true if the chat dialog is open, false otherwise."]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"video_muted_changed",children:"VIDEO_MUTED_CHANGED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when the local participant's video is muted or unmuted. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"muted"}),": an integer indicating whether the video is muted or not. 0 means unmuted, and 4 means muted."]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"ready_to_close",children:"READY_TO_CLOSE"}),"\n",(0,t.jsx)(n.p,{children:"The SDK is ready to be closed / dismissed."}),"\n",(0,t.jsx)(n.h5,{id:"custom_overflow_menu_button_pressed",children:"CUSTOM_OVERFLOW_MENU_BUTTON_PRESSED"}),"\n",(0,t.jsxs)(n.p,{children:["Broadcasted when a custom button in the overflow menu is pressed. ",(0,t.jsx)(n.code,{children:"data"})," contains the following information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"id"}),": the id of the pressed custom button."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"text"}),": the label of the pressed custom button."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"broadcasting-actions",children:"Broadcasting Actions"}),"\n",(0,t.jsx)(n.p,{children:"The SDK listens for broadcasted actions from the users and reacts accordingly."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'    Intent muteBroadcastIntent = new Intent(BroadcastAction.Type.SET_AUDIO_MUTED.getAction());\n    muteBroadcastIntent.putExtra("muted", muted);\n    LocalBroadcastManager.getInstance(getApplicationContext()).sendBroadcast(muteBroadcastIntent);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The intents can be built manually (as shown above) or through the methods in ",(0,t.jsx)(n.code,{children:"BroadcastIntentHelper"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Please see ",(0,t.jsx)(n.code,{children:"JitsiMeetOngoingConferenceService"})," for more examples of sending actions."]}),"\n",(0,t.jsx)(n.h4,{id:"supported-actions",children:"Supported actions"}),"\n",(0,t.jsx)(n.h5,{id:"set_audio_muted",children:"SET_AUDIO_MUTED"}),"\n",(0,t.jsxs)(n.p,{children:["Sets the state of the localParticipant audio muted according to the ",(0,t.jsx)(n.code,{children:"muted"})," parameter.\nExpects a ",(0,t.jsx)(n.code,{children:"muted"})," key on the intent extra with a boolean value."]}),"\n",(0,t.jsx)(n.h5,{id:"set_video_muted",children:"SET_VIDEO_MUTED"}),"\n",(0,t.jsxs)(n.p,{children:["Sets the state of the localParticipant video muted according to the ",(0,t.jsx)(n.code,{children:"muted"})," parameter.\nExpects a ",(0,t.jsx)(n.code,{children:"muted"})," key on the intent extra with a boolean value."]}),"\n",(0,t.jsx)(n.h5,{id:"hang_up",children:"HANG_UP"}),"\n",(0,t.jsx)(n.p,{children:"The localParticipant leaves the current conference.\nDoes not expect any extra value."}),"\n",(0,t.jsx)(n.h5,{id:"send_endpoint_text_message",children:"SEND_ENDPOINT_TEXT_MESSAGE"}),"\n",(0,t.jsxs)(n.p,{children:["Sends a message via the data channel to one particular participant or all of them.\nExpects a ",(0,t.jsx)(n.code,{children:"to"})," key on the intent extra with the ID of the participant to which the message\nis meant and a ",(0,t.jsx)(n.code,{children:"message"})," key with a string value, the actual content of the message.\nIf the ",(0,t.jsx)(n.code,{children:"to"})," key is not present or its value is empty, the message will be sent\nto all the participants in the conference."]}),"\n",(0,t.jsxs)(n.p,{children:["To get the participantId, the ",(0,t.jsx)(n.code,{children:"PARTICIPANT_JOINED"})," event should be listened for,\nwhich ",(0,t.jsx)(n.code,{children:"data"})," includes the id and this should be stored somehow."]}),"\n",(0,t.jsx)(n.h5,{id:"toggle_screen_share",children:"TOGGLE_SCREEN_SHARE"}),"\n",(0,t.jsxs)(n.p,{children:["Sets the state of the localParticipant screen share according to the ",(0,t.jsx)(n.code,{children:"enabled"})," parameter.\nExpects an ",(0,t.jsx)(n.code,{children:"enabled"})," key on the intent extra with a boolean value."]}),"\n",(0,t.jsx)(n.h5,{id:"retrieve_participants_info",children:"RETRIEVE_PARTICIPANTS_INFO"}),"\n",(0,t.jsxs)(n.p,{children:["Signals the SDK to retrieve a list with the participant's information. The SDK will emit a PARTICIPANTS_INFO_RETRIEVED event.\nExpects a ",(0,t.jsx)(n.code,{children:"requestId"})," key on the intent extra with a string value, this parameter will be present on the PARTICIPANTS_INFO_RETRIEVED event."]}),"\n",(0,t.jsx)(n.h5,{id:"open_chat",children:"OPEN_CHAT"}),"\n",(0,t.jsxs)(n.p,{children:["Opens the chat dialog. If a ",(0,t.jsx)(n.code,{children:"to"})," key is present with a valid participantId, the private chat for that particular participant will be opened."]}),"\n",(0,t.jsx)(n.h5,{id:"close_chat",children:"CLOSE_CHAT"}),"\n",(0,t.jsx)(n.p,{children:"Closes the chat dialog.\nDoes not expect any extra value."}),"\n",(0,t.jsx)(n.h5,{id:"send_chat_message",children:"SEND_CHAT_MESSAGE"}),"\n",(0,t.jsxs)(n.p,{children:["Sends a chat message, either a private one if a ",(0,t.jsx)(n.code,{children:"to"})," key is present with a valid participantId and to everybody otherwise.\nExpect a ",(0,t.jsx)(n.code,{children:"message"})," key with a string value."]}),"\n",(0,t.jsx)(n.h2,{id:"proguard-rules",children:"ProGuard rules"}),"\n",(0,t.jsxs)(n.p,{children:["When using the SDK on a project some proguard rules have to be added to avoid necessary code being stripped. Add the following to your project's\nrules file: ",(0,t.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet/blob/master/android/app/proguard-rules.pro",children:"https://github.com/jitsi/jitsi-meet/blob/master/android/app/proguard-rules.pro"})]}),"\n",(0,t.jsx)(n.h2,{id:"picture-in-picture",children:"Picture-in-Picture"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"JitsiMeetView"}),' will automatically adjust its UI when presented in a\nPicture-in-Picture style scenario, in a rectangle too small to accommodate its\n"full" UI.']}),"\n",(0,t.jsx)(n.h2,{id:"dropbox-integration",children:"Dropbox integration"}),"\n",(0,t.jsx)(n.p,{children:"To set up the Dropbox integration, follow these steps:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Add the following to the app's AndroidManifest.xml and change ",(0,t.jsx)(n.code,{children:"<APP_KEY>"})," to\nyour Dropbox app key:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<activity\n    android:configChanges="keyboard|orientation"\n    android:launchMode="singleTask"\n    android:name="com.dropbox.core.android.AuthActivity">\n  <intent-filter>\n    <action android:name="android.intent.action.VIEW" />\n    <category android:name="android.intent.category.BROWSABLE" />\n    <category android:name="android.intent.category.DEFAULT" />\n    <data android:scheme="db-<APP_KEY>" />\n  </intent-filter>\n</activity>\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["Add the following to the app's strings.xml and change ",(0,t.jsx)(n.code,{children:"<APP_KEY>"})," to your\nDropbox app key:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<string name="dropbox_app_key"><APP_KEY></string>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function d(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);
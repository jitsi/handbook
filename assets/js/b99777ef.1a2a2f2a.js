"use strict";(self.webpackChunk_jitsi_handbook=self.webpackChunk_jitsi_handbook||[]).push([[3383],{437:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var s=i(4848),t=i(8453);const o={id:"dev-guide-electron-sdk",title:"Electron SDK"},r=void 0,l={id:"dev-guide/dev-guide-electron-sdk",title:"Electron SDK",description:"The Jitsi Meet Electron SDK provides a toolkit for adding Jitsi Meet into electron applications with additional features for a better desktop experience.",source:"@site/docs/dev-guide/electron-sdk.md",sourceDirName:"dev-guide",slug:"/dev-guide/dev-guide-electron-sdk",permalink:"/handbook/docs/dev-guide/dev-guide-electron-sdk",draft:!1,unlisted:!1,editUrl:"https://github.com/jitsi/handbook/edit/master/docs/dev-guide/electron-sdk.md",tags:[],version:"current",lastUpdatedAt:1734382736e3,frontMatter:{id:"dev-guide-electron-sdk",title:"Electron SDK"},sidebar:"docs",previous:{title:"lib-jitsi-meet API (low level)",permalink:"/handbook/docs/dev-guide/dev-guide-ljm-api"},next:{title:"React SDK",permalink:"/handbook/docs/dev-guide/dev-guide-react-sdk"}},d={},c=[{value:"Sample Application",id:"sample-application",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Screen Sharing",id:"screen-sharing",level:3},{value:"Remote Control",id:"remote-control",level:3},{value:"Always On Top",id:"always-on-top",level:3},{value:"Power Monitor",id:"power-monitor",level:3},{value:"NOTE:",id:"note",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The Jitsi Meet Electron SDK provides a toolkit for adding Jitsi Meet into electron applications with additional features for a better desktop experience."}),"\n",(0,s.jsx)(n.p,{children:"Supported Electron versions: >= 16."}),"\n",(0,s.jsx)(n.h2,{id:"sample-application",children:"Sample Application"}),"\n",(0,s.jsxs)(n.p,{children:["The Jitsi Meet Electron Application is created using the Electron SDK and makes use of all its available features. The source code is available here: ",(0,s.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet-electron",children:"jitsi-meet-electron application repository"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"Install from npm:"}),"\n",(0,s.jsx)(n.p,{children:"npm install @jitsi/electron-sdk"}),"\n",(0,s.jsx)(n.p,{children:"Note: This package contains native code on Windows for the remote control module. Binary prebuilds are packaged with prebuildify as part of the npm package."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.h3,{id:"screen-sharing",children:"Screen Sharing"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Requirements"}),":\nThe screen sharing utility requires iframe HTML Element that will load Jitsi Meet."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Enable the screen sharing:"})}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"render"})," electron process of the window where Jitsi Meet is displayed:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const {\n    setupScreenSharingRender\n} = require("@jitsi/electron-sdk");\n\n// api - The Jitsi Meet iframe api object.\nsetupScreenSharingRender(api);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"main"})," electron process:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const {\n    setupScreenSharingMain\n} = require("@jitsi/electron-sdk");\n\n// jitsiMeetWindow - The BrowserWindow instance of the window where Jitsi Meet is loaded.\n// appName - Application name which will be displayed inside the content sharing tracking window\n// i.e. [appName] is sharing your screen.\n// osxBundleId - Mac Application bundleId for which screen capturer permissions will be reset if user denied them.  \nsetupScreenSharingMain(mainWindow, appName, osxBundleId);\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),":\nAn example using screensharing in Electron without the SDK is available here: ",(0,s.jsx)(n.a,{href:"https://github.com/gabiborlea/jitsi-meet-electron-example",children:"screensharing example without the SDK"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"remote-control",children:"Remote Control"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Requirements"}),":\nThe remote control utility requires an iframe HTML Element that will load Jitsi Meet."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Enable the remote control:"})}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"render"})," electron process of the window where Jitsi Meet is displayed:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const {\n    RemoteControl\n} = require("@jitsi/electron-sdk");\n\n// iframe - the Jitsi Meet iframe\nconst remoteControl = new RemoteControl(iframe);\n'})}),"\n",(0,s.jsx)(n.p,{children:"To disable the remote control:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"remoteControl.dispose();\n"})}),"\n",(0,s.jsxs)(n.p,{children:["NOTE: The ",(0,s.jsx)(n.code,{children:"dispose"})," method will be called automatically when the Jitsi Meet iframe unloads."]}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"main"})," electron process:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const {\n    RemoteControlMain\n} = require("@jitsi/electron-sdk");\n\n// jitsiMeetWindow - The BrowserWindow instance of the window where Jitsi Meet is loaded.\nconst remoteControl = new RemoteControlMain(mainWindow);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"always-on-top",children:"Always On Top"}),"\n",(0,s.jsx)(n.p,{children:"Displays a small window with the currently active speaker video when the main Jitsi Meet window is not focused."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Requirements"}),":"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Jitsi Meet should be initialized through our ",(0,s.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet/blob/master/doc/api.md",children:"iframe API"})]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"BrowserWindow"})," instance where Jitsi Meet is displayed should use the ",(0,s.jsx)(n.a,{href:"https://github.com/electron/electron/blob/master/docs/api/window-open.md#using-chromes-windowopen-implementation",children:"Chrome's window.open implementation"})," (set ",(0,s.jsx)(n.code,{children:"nativeWindowOpen"})," option of ",(0,s.jsx)(n.code,{children:"BrowserWindow"}),"'s constructor to ",(0,s.jsx)(n.code,{children:"true"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["If you have a custom handler for opening windows you have to filter the always-on-top window. You can do this by its ",(0,s.jsx)(n.code,{children:"frameName"})," argument which will be set to ",(0,s.jsx)(n.code,{children:"AlwaysOnTop"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Enable the aways on top:"})}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"main"})," electron process:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const {\n    setupAlwaysOnTopMain\n} = require("@jitsi/electron-sdk");\n\n// jitsiMeetWindow - The BrowserWindow instance\n// of the window where Jitsi Meet is loaded.\nsetupAlwaysOnTopMain(jitsiMeetWindow);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"render"})," electron process of the window where Jitsi Meet is displayed:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const {\n    setupAlwaysOnTopRender\n} = require(\"@jitsi/electron-sdk\");\n\nconst api = new JitsiMeetExternalAPI(...);\nconst alwaysOnTop = setupAlwaysOnTopRender(api);\n\nalwaysOnTop.on('will-close', handleAlwaysOnTopClose);\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"setupAlwaysOnTopRender"})," returns an instance of EventEmitter with the following events:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"dismissed"})," - emitted when the always-on-top window is explicitly dismissed via its close button"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"will-close"})," - emitted right before the always-on-top window is going to close"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"power-monitor",children:"Power Monitor"}),"\n",(0,s.jsx)(n.p,{children:"Provides a way to query Electron for system idle and receive power monitor events."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"enable power monitor:"}),"\nIn the ",(0,s.jsx)(n.strong,{children:"main"})," electron process:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const {\n    setupPowerMonitorMain\n} = require("@jitsi/electron-sdk");\n\n// jitsiMeetWindow - The BrowserWindow instance\n// of the window where Jitsi Meet is loaded.\nsetupPowerMonitorMain(jitsiMeetWindow);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the ",(0,s.jsx)(n.strong,{children:"render"})," electron process of the window where Jitsi Meet is displayed:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const {\n    setupPowerMonitorRender\n} = require("@jitsi/electron-sdk");\n\nconst api = new JitsiMeetExternalAPI(...);\nsetupPowerMonitorRender(api);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"note",children:"NOTE:"}),"\n",(0,s.jsxs)(n.p,{children:["You'll need to add 'disable-site-isolation-trials' switch because of ",(0,s.jsx)(n.a,{href:"https://github.com/electron/electron/issues/18214",children:"https://github.com/electron/electron/issues/18214"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"app.commandLine.appendSwitch('disable-site-isolation-trials')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For more information please check out the SDK's repository ",(0,s.jsx)(n.a,{href:"https://github.com/jitsi/jitsi-meet-electron-sdk",children:"https://github.com/jitsi/jitsi-meet-electron-sdk"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);
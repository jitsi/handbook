"use strict";(self.webpackChunk_jitsi_handbook=self.webpackChunk_jitsi_handbook||[]).push([[2681],{9184:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=s(4848),o=s(8453);const r={id:"devops-guide-log-analyser",title:"Self-Hosting Guide - Log Analyser",sidebar_label:"Log Analyser"},t=void 0,l={id:"devops-guide/devops-guide-log-analyser",title:"Self-Hosting Guide - Log Analyser",description:"Welcome to the Jitsi Meet Log Analyser project! This integration leverages Grafana Loki and OpenTelemetry to enable effective log management and analysis for Jitsi Meet components.",source:"@site/docs/devops-guide/log-analyser.md",sourceDirName:"devops-guide",slug:"/devops-guide/devops-guide-log-analyser",permalink:"/handbook/docs/devops-guide/devops-guide-log-analyser",draft:!1,unlisted:!1,editUrl:"https://github.com/jitsi/handbook/edit/master/docs/devops-guide/log-analyser.md",tags:[],version:"current",lastUpdatedAt:1750342589e3,frontMatter:{id:"devops-guide-log-analyser",title:"Self-Hosting Guide - Log Analyser",sidebar_label:"Log Analyser"},sidebar:"docs",previous:{title:"Docker",permalink:"/handbook/docs/devops-guide/devops-guide-docker"},next:{title:"Configuration",permalink:"/handbook/docs/category/configuration"}},a={},d=[{value:"Overview",id:"overview",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Setup",id:"setup",level:3},{value:"Access Grafana",id:"access-grafana",level:3},{value:"Pre-configured Dashboards",id:"pre-configured-dashboards",level:3},{value:"Filtering Logs with LogQL",id:"filtering-logs-with-logql",level:3},{value:"Usage",id:"usage",level:2},{value:"Customizing Dashboards",id:"customizing-dashboards",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Acknowledgements",id:"acknowledgements",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Welcome to the Jitsi Meet Log Analyser project! This integration leverages Grafana Loki and OpenTelemetry to enable effective log management and analysis for Jitsi Meet components."}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"This project offers a streamlined setup for collecting, parsing, and visualizing log data generated by Jitsi Meet components. The integration includes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A Docker Compose setup file (",(0,i.jsx)(n.code,{children:"log-analyser.yml"}),") for configuring Loki and OpenTelemetry Collector."]}),"\n",(0,i.jsxs)(n.li,{children:["A Docker Compose setup file (",(0,i.jsx)(n.code,{children:"grafana.yml"}),") for configuring Grafana."]}),"\n",(0,i.jsx)(n.li,{children:"A unified Docker Compose command that initiates all services concurrently."}),"\n",(0,i.jsx)(n.li,{children:"Instructions on configuring Grafana with Loki as a log data source for enhanced visualization and analysis."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"Before you begin, ensure you have the following installed on your system:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.docker.com/compose/install/",children:"Docker Compose"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.p,{children:"To set up the project, follow these steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Clone the repository:"})}),"\n",(0,i.jsx)(n.p,{children:"Clone the Jitsi Meet repository that contains the necessary Docker Compose files."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/jitsi/docker-jitsi-meet.git\ncd docker-jitsi-meet\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Update Jitsi Meet Docker Compose Configuration:"})}),"\n",(0,i.jsxs)(n.p,{children:["To enable log collection and analysis, you need to modify the ",(0,i.jsx)(n.code,{children:"docker-compose.yml"})," file for Jitsi Meet components. Add the following configuration to each Jitsi service within the ",(0,i.jsx)(n.code,{children:"docker-compose.yml"})," file:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'logging:\n  driver: "json-file"\n  options:\n    labels: "service"\n'})}),"\n",(0,i.jsx)(n.p,{children:"This configuration ensures that logs are collected in JSON format and tagged with service labels, which is essential for Loki to properly ingest and index the logs."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Start the Docker containers:"})}),"\n",(0,i.jsx)(n.p,{children:"Use the following command to start all required services, including the Jitsi Meet components, Grafana, Loki, and OpenTelemetry:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker-compose -f docker-compose.yml -f log-analyser.yml -f grafana.yml up -d\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Explanation:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The command combines multiple Docker Compose files to launch the entire stack:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"docker-compose.yml"})," launches the Jitsi Meet components."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"log-analyser.yml"})," sets up the log analysis tools, including Loki and OpenTelemetry."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"grafana.yml"})," initializes Grafana for log visualization."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Logs generated by the Jitsi Meet components are automatically forwarded to Loki via the OpenTelemetry Collector, making them available for analysis in Grafana."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Note:"})," If you only want to use Grafana for log visualization without the log analysis tools, you can run ",(0,i.jsx)(n.code,{children:"grafana.yml"})," independently. However, for the complete log analysis setup, both ",(0,i.jsx)(n.code,{children:"log-analyser.yml"})," and ",(0,i.jsx)(n.code,{children:"grafana.yml"})," are required."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"access-grafana",children:"Access Grafana"}),"\n",(0,i.jsx)(n.p,{children:"After starting the services, follow these steps to access Grafana:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Open Grafana in your web browser:"})}),"\n",(0,i.jsxs)(n.p,{children:["Navigate to ",(0,i.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})," to access the Grafana interface."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Log in to Grafana:"})}),"\n",(0,i.jsx)(n.p,{children:"Use the default login credentials provided below:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Username:"})," ",(0,i.jsx)(n.code,{children:"admin"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Password:"})," ",(0,i.jsx)(n.code,{children:"admin"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"(It is recommended to change these credentials after the first login for security purposes.)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pre-configured-dashboards",children:"Pre-configured Dashboards"}),"\n",(0,i.jsx)(n.p,{children:"Grafana comes with several pre-configured dashboards specifically designed for monitoring different Jitsi Meet components. These dashboards will be automatically available once you log in to Grafana."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Important\u2757\ufe0f:"})," For data to appear in these dashboards, logs need to be generated by the Jitsi Meet components. Here are the available dashboards:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Jicofo Dashboard:"})," Visualizes logs related to Jitsi Conference Focus (Jicofo), which handles media and signaling in Jitsi Meet."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"JVB Dashboard:"})," Focuses on Jitsi Videobridge (JVB) logs, showing details on video streaming and performance metrics."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prosody Dashboard:"})," Monitors Prosody, the XMPP server used by Jitsi Meet for signaling."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Web Dashboard:"})," Displays logs and metrics related to the web frontend of Jitsi Meet."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Jitsi All Dashboard:"})," A comprehensive dashboard that aggregates logs from all Jitsi Meet components."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/user-attachments/assets/2e54833e-4906-4429-81ce-7e56b7bf38d1",alt:"Jitsi Meet Log Analyser Dashboard"})}),"\n",(0,i.jsx)(n.h3,{id:"filtering-logs-with-logql",children:"Filtering Logs with LogQL"}),"\n",(0,i.jsx)(n.p,{children:'Beyond the pre-configured dashboards, you can explore and filter logs in Grafana\'s "Explore" section using LogQL, a powerful query language designed for Loki. Here\u2019s how you can filter and analyze logs:'}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Access the Explore section:"})}),"\n",(0,i.jsxs)(n.p,{children:["In Grafana, navigate to the ",(0,i.jsx)(n.strong,{children:"Explore"})," tab from the left sidebar. This section allows you to run queries on your logs in real-time."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Select the Loki Data Source:"})}),"\n",(0,i.jsxs)(n.p,{children:["In the Explore section, ensure that the ",(0,i.jsx)(n.strong,{children:"Data Source"})," is set to ",(0,i.jsx)(n.strong,{children:"Loki"}),". This is essential because Loki is the backend that stores and manages the log data collected from Jitsi Meet components."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Using LogQL for Filtering:"})}),"\n",(0,i.jsxs)(n.p,{children:["LogQL enables you to create complex queries to filter specific logs. For example, the following LogQL query filters logs for the ",(0,i.jsx)(n.code,{children:"jitsi-jicofo"})," component and parses them:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-logql",children:'{exporter="OTLP"} | json | attributes_attrs_service="jitsi-jicofo"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Explanation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'{exporter="OTLP"}'}),": Selects logs that are exported via OpenTelemetry."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"| json"}),": Parses the log data as JSON, making attributes accessible for filtering."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'attributes_attrs_service="jitsi-jicofo"'}),": Filters logs where the ",(0,i.jsx)(n.code,{children:"attributes_attrs_service"})," field equals ",(0,i.jsx)(n.code,{children:'"jitsi-jicofo"'}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You can modify the query to filter logs from other components or adjust the criteria according to your needs."}),"\n",(0,i.jsxs)(n.p,{children:["For more details and advanced usage of LogQL, you can refer to the official ",(0,i.jsx)(n.a,{href:"https://grafana.com/docs/loki/latest/logql/",children:"LogQL documentation"})," from Grafana."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/user-attachments/assets/f75c77a6-6f7b-41ae-9efe-855a5b426bdf",alt:"LogQL Query Example"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.p,{children:"Once the setup is complete, you can start exploring your log data in Grafana. The pre-configured dashboards provide an insightful visualization of the logs collected from Jitsi Meet components. Use these dashboards to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Parse Logs:"})," View detailed logs collected from various components."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Visualize Logs:"})," Analyze log data through various charts, graphs, and panels to gain insights into system performance and issues."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"customizing-dashboards",children:"Customizing Dashboards"}),"\n",(0,i.jsx)(n.p,{children:"While the pre-configured dashboards provide a solid starting point, you may want to customize them or create new dashboards to suit your specific needs. Here's how you can do that:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Create a New Dashboard:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Go to the Grafana home page, click on the "+" icon on the left sidebar, and select "Dashboard."'}),"\n",(0,i.jsx)(n.li,{children:"Add panels to visualize different metrics or logs by selecting the appropriate data source (Loki) and using LogQL queries."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Customize Existing Dashboards:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Navigate to an existing dashboard and click on the "Edit" button (pencil icon) on any panel.'}),"\n",(0,i.jsx)(n.li,{children:"Adjust the LogQL query, visualization type, and panel settings to match your requirements."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Save and Share Dashboards:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"After customizing, save the dashboard. You can also export it as a JSON file to share with others or for backup."}),"\n",(0,i.jsxs)(n.li,{children:["To export the dashboard:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Click on the dashboard title to open the options menu."}),"\n",(0,i.jsxs)(n.li,{children:["Select ",(0,i.jsx)(n.strong,{children:'"Dashboard settings"'})," > ",(0,i.jsx)(n.strong,{children:'"JSON Model"'}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:'"Download JSON"'})," to save the file locally."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Contribute to Jitsi Meet Dashboards:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If you've created or customized a dashboard that could benefit the wider Jitsi community, you can contribute by updating the relevant dashboard JSON file."}),"\n",(0,i.jsxs)(n.li,{children:["Here\u2019s how to do it:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Export the JSON file of your customized dashboard as described above."}),"\n",(0,i.jsxs)(n.li,{children:["Locate the corresponding Jitsi component dashboard JSON file in the repository (e.g., ",(0,i.jsx)(n.code,{children:"jicofo-dashboard.json"}),", ",(0,i.jsx)(n.code,{children:"jvb-dashboard.json"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"Update the existing JSON file with your changes."}),"\n",(0,i.jsx)(n.li,{children:"Submit a pull request to the repository with the updated JSON file and a brief description of the changes you made."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"This helps improve the pre-configured dashboards and makes your contributions available to all users."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Grafana Provisioning:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The Jitsi Meet Log Analyser uses Grafana provisioning to manage dashboards. When you update a dashboard JSON file in the repository, it will be automatically provisioned in Grafana when the stack is deployed."}),"\n",(0,i.jsx)(n.li,{children:"This ensures that everyone using the repository gets the latest version of the dashboards without needing to manually import them."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"By following these steps, you can not only customize your own monitoring setup but also contribute improvements back to the Jitsi community."}),"\n",(0,i.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,i.jsx)(n.p,{children:"If you encounter issues while setting up or using the Jitsi Meet Log Analyser, here are some common problems and their solutions:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Grafana Not Starting:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Check if the Grafana container is running with ",(0,i.jsx)(n.code,{children:"docker ps"})," and inspect logs using ",(0,i.jsx)(n.code,{children:"docker logs grafana"})," for any errors."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"No Logs in Grafana Dashboards:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ensure that Jitsi Meet components are generating logs. Clear browser cache, reload Grafana. Ensure OpenTelemetry, Loki, and Grafana containers are all running with ",(0,i.jsx)(n.code,{children:"docker ps"}),", and inspect each container's logs for issues using ",(0,i.jsx)(n.code,{children:"docker logs <container_name>"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"OpenTelemetry Collector Not Forwarding Logs:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Check OpenTelemetry's logs with ",(0,i.jsx)(n.code,{children:"docker logs otel"}),", ensure it's connected to the correct endpoints, and verify the log format is correct."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Authentication Failures in Grafana:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Restart Grafana with ",(0,i.jsx)(n.code,{children:"docker restart grafana otel"}),". If still unsuccessful, delete the data volume with ",(0,i.jsx)(n.code,{children:"docker-compose down -v"})," and restart to reset to default credentials (admin/admin)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Slow Queries:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If LogQL queries are slow, try optimizing the query in Grafana."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Permission Issues:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"If you encounter permission issues, make sure that Docker has the necessary access rights to the directories where logs are stored."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Docker Network Issues:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Verify Docker network connections, IP range, and restart the network if necessary."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"OpenTelemetry Collector Not Forwarding Logs:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check OpenTelemetry logs, verify configuration, and ensure log format compatibility."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Docker Containers Failing to Start:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"docker-compose logs"})," to view detailed startup errors, and check for common issues like incorrect configurations."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"acknowledgements",children:"Acknowledgements"}),"\n",(0,i.jsx)(n.p,{children:"We appreciate your interest in the Jitsi Meet Log Analyser project! If you encounter any issues or have questions, feel free to reach out to the project maintainers or contribute to the repository."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const o={},r=i.createContext(o);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);